import json
import pyodbc

# ‚úÖ MSSQL ’Ø’°’∫’´ ’ø’æ’µ’°’¨’∂’•÷Ä’®
server = "localhost"
database = "schedule"
username = "admin"
password = "mypassword"

conn = pyodbc.connect(
    f"DRIVER={{SQL Server}};SERVER={server};DATABASE={database};UID={username};PWD={password}"
)
cursor = conn.cursor()

# ‚úÖ JSON ÷Ü’°’µ’¨’´ ’¢’°÷Å’∏÷Ç’¥
json_file = "final_schedule.json"
with open(json_file, "r", encoding="utf-8") as file:
    data = json.load(file)

# ‚úÖ Mapping ÷Ö÷Ä’•÷Ä’´, ’∑’°’¢’°’©’∂’•÷Ä’´, ’™’°’¥’°’µ’´’∂ ’Ω’¨’∏’ø’∂’•÷Ä’´ ’∞’°’¥’°÷Ä
dayMap = {1: "‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", 2: "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", 3: "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", 4: "’Ä’´’∂’£’∑’°’¢’©’´", 5: "’à÷Ç÷Ä’¢’°’©"}
weekMap = {1: "’∞’°’¥’°÷Ä’´’π", 2: "’∞’°’µ’ø’°÷Ä’°÷Ä"}
slotMap = {1: "09:30-10:50", 2: "11:00-12:20", 3: "12:50-14:10", 4: "14:20-15:40"}

# ‚úÖ ’ï’™’°’∂’§’°’Ø ÷Ü’∏÷Ç’∂’Ø÷Å’´’° `get_or_insert`
def get_or_insert(table, column, value):
    """’é’•÷Ä’°’§’°÷Ä’±’∂’∏÷Ç’¥ ’ß ’°÷Ä’™’•÷Ñ’´ ID-’∂, ’•’©’• ’£’∏’µ’∏÷Ç’©’µ’∏÷Ç’∂ ’∏÷Ç’∂’´, ’∞’°’Ø’°’º’°’Ø ’§’•’∫÷Ñ’∏÷Ç’¥ ’°’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’ß ’∏÷Ç ’æ’•÷Ä’°’§’°÷Ä’±’∂’∏÷Ç’¥ ID-’∂"""
    cursor.execute(f"SELECT id FROM {table} WHERE {column} = ?", (value,))
    row = cursor.fetchone()
    if row:
        return row[0]
    
    cursor.execute(f"INSERT INTO {table} ({column}) VALUES (?)", (value,))
    cursor.execute("SELECT SCOPE_IDENTITY();")
    return cursor.fetchone()[0]

# ‚úÖ ’è’æ’µ’°’¨’∂’•÷Ä’´ ’∂’•÷Ä’¥’∏÷Ç’Æ’¥’°’∂ ’∞’´’¥’∂’°’Ø’°’∂ ÷Å’´’Ø’¨
for entry in data:
    try:
        # üîπ ’ç’ø’°’∂’∏÷Ç’¥ ’•’∂÷Ñ JSON-’´÷Å ’°÷Ä’™’•÷Ñ’∂’•÷Ä’®
        level_id = get_or_insert("Levels", "name", entry["level"])
        course_id = get_or_insert("Courses", "code", entry["course"])
        type_id = get_or_insert("Types", "name", entry["type"][0])
        subject_id = get_or_insert("Subjects", "name", entry["subject"])

        # üîπ ’ç’ø’°’∂’∏÷Ç’¥ ’•’∂÷Ñ ’∑’°’¢’°’©, ÷Ö÷Ä, ’™’°’¥ ID-’∂’•÷Ä’®
        week_id = get_or_insert("Weeks", "type", weekMap.get(entry["week_type"], "’∞’°’µ’ø’°÷Ä’°÷Ä"))
        day_id = get_or_insert("Days", "name", dayMap.get(entry["day_of_week"], "’â’´ ’£’ø’∂’æ’•’¨"))
        time_slot_id = get_or_insert("TimeSlots", "slot", slotMap.get(entry["time_of_day"], "’â’´ ’£’ø’∂’æ’•’¨"))

        # üîπ ’ç’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ ’∏÷Ç’Ω’∏÷Ç÷Å’´’π’∂’•÷Ä’´’∂
        teacher_ids = []
        for teacher in entry["teachers"]:
            teacher_id = get_or_insert("Teachers", "name", teacher)
            teacher_ids.append(teacher_id)
            cursor.execute("IF NOT EXISTS (SELECT 1 FROM Subject_Teachers WHERE subject_id = ? AND teacher_id = ?) "
                           "INSERT INTO Subject_Teachers (subject_id, teacher_id) VALUES (?, ?)", 
                           (subject_id, teacher_id, subject_id, teacher_id))

        # üîπ ’ç’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ ’¨’Ω’°÷Ä’°’∂’∂’•÷Ä’®
        room_ids = []
        for room in entry["rooms"]:
            room_id = get_or_insert("Rooms", "number", room)
            room_ids.append(room_id)
            cursor.execute("IF NOT EXISTS (SELECT 1 FROM Subject_Rooms WHERE subject_id = ? AND room_id = ?) "
                           "INSERT INTO Subject_Rooms (subject_id, room_id) VALUES (?, ?)", 
                           (subject_id, room_id, subject_id, room_id))

        # üîπ ‘∏’∂’ø÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’°’º’°’ª’´’∂ ’∏÷Ç’Ω’∏÷Ç÷Å’π’´ ÷á ’¨’Ω’°÷Ä’°’∂’´ ID-’∂’•÷Ä’®
        first_teacher_id = teacher_ids[0] if teacher_ids else None
        first_room_id = room_ids[0] if room_ids else None

        # üîπ ’ç’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ None ’°÷Ä’™’•÷Ñ’∂’•÷Ä’®’ù ’Ω’≠’°’¨’∂’•÷Ä’´÷Å ’≠’∏÷Ç’Ω’°÷É’•’¨’∏÷Ç ’∞’°’¥’°÷Ä
        if not all([course_id, day_id, week_id, time_slot_id, first_room_id, subject_id, first_teacher_id, type_id]):
            print(f"‚ö†Ô∏è ‘≤’°÷Å ’©’∏’≤’∂’æ’°’Æ ’£÷Ä’°’º’∏÷Ç’¥’ù ’¢’°÷Å’°’Ø’°’µ’∏’≤ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’∫’°’ø’≥’°’º’∏’æ: {entry}")
            continue

        # ‚úÖ ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’® Schedule ’°’≤’µ’∏÷Ç’Ω’°’Ø’∏÷Ç’¥
        cursor.execute("""
            INSERT INTO Schedule 
            (course_id, day_id, week_id, time_slot_id, room_id, subject_id, teacher_id, type_id, details)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
        """, (course_id, day_id, week_id, time_slot_id, first_room_id, subject_id, first_teacher_id, type_id, None))

        print(f"‚úÖ ‘≥÷Ä’æ’°’Æ ’ß '{entry['subject']}' ’°’º’°÷Ä’Ø’°’∂ '{entry['course']}' ’Ø’∏÷Ç÷Ä’Ω’´ ’∞’°’¥’°÷Ä÷â")

    except Exception as e:
        print(f"‚ùå ’ç’≠’°’¨ ’£÷Ä’°’º’¥’°’∂ ’™’°’¥’°’∂’°’Ø: {entry}")
        print(f"‚ùó ’ç’≠’°’¨: {e}")

# ‚úÖ ’ì’∏÷É’∏’≠’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’® ’∫’°’∞’∫’°’∂’∏÷Ç’¥ ’•’∂÷Ñ
conn.commit()
cursor.close()
conn.close()

print("üéâ ‚úÖ ’è’æ’µ’°’¨’∂’•÷Ä’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’∂’•÷Ä’¥’∏÷Ç’Æ’æ’•÷Å’´’∂ MSSQL-’´ ’¥’•’ª!")
