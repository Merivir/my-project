import json
import pyodbc

# ‚úÖ MSSQL ’Ø’°’∫’´ ’ø’æ’µ’°’¨’∂’•÷Ä’®
server = "localhost"
database = "schedule"
username = "admin"
password = "mypassword"

conn = pyodbc.connect(
    f"DRIVER={{SQL Server}};SERVER={server};DATABASE={database};UID={username};PWD={password}"
)
cursor = conn.cursor()

# ‚úÖ ’ï’™’°’∂’§’°’Ø ÷Ü’∏÷Ç’∂’Ø÷Å’´’° `get_or_insert()`
def get_or_insert(table, column, value):
    """‘µ’©’• ’ø’æ’µ’°’¨’® ’¢’°’¶’°’µ’∏÷Ç’¥ ’π’Ø’°, ’°’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ, ’•’©’• ’Ø’°’ù ’æ’•÷Ä’°’§’°÷Ä’±’∂’∏÷Ç’¥ ’•’∂÷Ñ ID-’∂"""
    if not value:
        return None

    cursor.execute(f"SELECT id FROM {table} WHERE {column} = ?", (value,))
    row = cursor.fetchone()
    if row:
        return row[0]

    cursor.execute(f"INSERT INTO {table} ({column}) VALUES (?)", (value,))
    cursor.execute("SELECT SCOPE_IDENTITY();")
    row = cursor.fetchone()
    return row[0] if row else None

# ‚úÖ JSON ÷Ü’°’µ’¨’´ ’¢’°÷Å’∏÷Ç’¥
json_file = "updated_everything_withdates.json"
with open(json_file, "r", encoding="utf-8") as file:
    data = json.load(file)

# ‚úÖ Weekly ÷á Week ID mapping
weekly_mapping = {1: "biweekly", 2: "weekly"}
week_mapping = {1: "’∞’°’¥’°÷Ä’´’π", 2: "’∞’°’µ’ø’°÷Ä’°÷Ä", 0: "’•÷Ä’Ø’∏÷Ç’Ω’∂ ’ß’¨"}

# ‚úÖ **1. ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’°’º’°’∂’±’´’∂ ’°’≤’µ’∏÷Ç’Ω’°’Ø’∂’•÷Ä’∏÷Ç’¥ ’ø’æ’µ’°’¨’∂’•÷Ä’®**
for entry in data:
    level_name = entry.get("level", "‘±’∂’∞’°’µ’ø ’¥’°’Ø’°÷Ä’§’°’Ø").strip()
    course_code = entry.get("course", "‘±’∂’∞’°’µ’ø ’Ø’∏÷Ç÷Ä’Ω").strip()
    subject_name = entry.get("subject", "‘±’∂’∞’°’µ’ø ’°’º’°÷Ä’Ø’°").strip()
    subject_type = entry["type"][0].strip() if entry.get("type") else None
    teachers = entry["teachers"] if entry.get("teachers") else ["‘±’∂’∏÷Ä’∏’∑"]
    rooms = entry["rooms"] if entry.get("rooms") else ["‘±’∂’∏÷Ä’∏’∑"]

    # ‚úÖ ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ Level, Course, Type
    level_id = get_or_insert("Levels", "name", level_name)
    course_id = get_or_insert("Courses", "code", course_code)
    type_id = get_or_insert("Types", "name", subject_type)

    # ‚úÖ ’ç’ø’°’∂’∏÷Ç’¥ ’•’∂÷Ñ ’∏÷Ç’Ω’∏÷Ç÷Å’π’´ ÷á ’¨’Ω’°÷Ä’°’∂’´ ID-’∂’•÷Ä’®
    teacher_id = get_or_insert("Teachers", "name", teachers[0].strip())
    room_id = get_or_insert("Rooms", "number", rooms[0].strip())

    # ‚úÖ ’ç’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ’ù ’°÷Ä’§’µ’∏÷Ñ Subject-’® ’Ø’°
    cursor.execute("SELECT id, teacher_id, room_id FROM Subjects WHERE name = ?", (subject_name,))
    subject_row = cursor.fetchone()

    if subject_row:
        subject_id, existing_teacher_id, existing_room_id = subject_row

        # ‚úÖ ‘µ’©’• `teacher_id` ’Ø’°’¥ `room_id` `NULL` ’ß, ’©’°÷Ä’¥’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ
        if existing_teacher_id is None or existing_room_id is None:
            cursor.execute("""
                UPDATE Subjects 
                SET teacher_id = ?, room_id = ? 
                WHERE id = ?
            """, (teacher_id, room_id, subject_id))
    else:
        # ‚úÖ ‘µ’©’• ’π’Ø’°, ’°’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ
        cursor.execute("""
            INSERT INTO Subjects (name, teacher_id, room_id) 
            VALUES (?, ?, ?)
        """, (subject_name, teacher_id, room_id))
        cursor.execute("SELECT SCOPE_IDENTITY();")
        subject_id = cursor.fetchone()[0]

conn.commit()
print("‚úÖ Subjects ’°’≤’µ’∏÷Ç’Ω’°’Ø’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’¨÷Ä’°÷Å’æ’•÷Å ÷á ’©’°÷Ä’¥’°÷Å’æ’•÷Å")

# ‚úÖ **2. ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ Schedule ’£÷Ä’°’º’∏÷Ç’¥’∂’•÷Ä’®**
for entry in data:
    try:
        level_id = get_or_insert("Levels", "name", entry["level"].strip())
        course_id = get_or_insert("Courses", "code", entry["course"].strip())

        cursor.execute("SELECT id FROM Subjects WHERE name = ?", (entry["subject"].strip(),))
        subject_row = cursor.fetchone()
        subject_id = subject_row[0] if subject_row else None

        type_id = get_or_insert("Types", "name", entry["type"][0].strip() if entry.get("type") else None)

        # ‚úÖ ’ç’ø’°’∂’∏÷Ç’¥ ’•’∂÷Ñ Weekly ID ’®’Ω’ø `biweekly_frequency`
        weekly_type_name = weekly_mapping.get(entry["biweekly_frequency"])
        cursor.execute("SELECT id FROM Weekly WHERE type = ?", (weekly_type_name,))
        weekly_row = cursor.fetchone()
        weekly_id = weekly_row[0] if weekly_row else None

        # ‚úÖ ’ç’ø’°’∂’∏÷Ç’¥ ’•’∂÷Ñ Week ID ’®’Ω’ø `type_of_week`
        week_type_name = week_mapping.get(entry["type_of_week"])
        cursor.execute("SELECT id FROM Weeks WHERE type = ?", (week_type_name,))
        week_row = cursor.fetchone()
        week_id = week_row[0] if week_row else None

        # ‚úÖ ’ç’ø’°’∂’∏÷Ç’¥ ’•’∂÷Ñ Day & Time Slot ID-’∂’•÷Ä’®
        for schedule_time in entry["schedule_times"]:
            day_id = schedule_time["day_of_week"]
            time_slot_id = schedule_time["time_of_day"]

            # ‚úÖ ’ç’ø’°’∂’∏÷Ç’¥ ’•’∂÷Ñ ’∏÷Ç’Ω’∏÷Ç÷Å’π’´ ÷á ’¨’Ω’°÷Ä’°’∂’´ ID-’∂’•÷Ä’®
            teachers = entry["teachers"] if entry.get("teachers") else ["‘±’∂’∏÷Ä’∏’∑"]
            rooms = entry["rooms"] if entry.get("rooms") else ["‘±’∂’∏÷Ä’∏’∑"]

            teacher_id = get_or_insert("Teachers", "name", teachers[0].strip())
            room_id = get_or_insert("Rooms", "number", rooms[0].strip())

            # ‚úÖ ‘µ’©’• ’∏÷Ä÷á’ß ’¢’°’∂ ’¢’°÷Å’°’Ø’°’µ’∏÷Ç’¥ ’ß, ’°’æ’ø’∏’¥’°’ø ’¨÷Ä’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ
            teacher_id = teacher_id if teacher_id else get_or_insert("Teachers", "name", "‘±’∂’∏÷Ä’∏’∑")
            room_id = room_id if room_id else get_or_insert("Rooms", "number", "‘±’∂’∏÷Ä’∏’∑")

            # ‚úÖ ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ Schedule ’£÷Ä’°’º’∏÷Ç’¥’® (level_id & weekly_id-’∏’æ)
            cursor.execute("""
                INSERT INTO Schedule 
                (level_id, course_id, subject_id, type_id, teacher_id, room_id, day_id, time_slot_id, weekly_id, week_id, details)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
            """, (level_id, course_id, subject_id, type_id, teacher_id, room_id, day_id, time_slot_id, weekly_id, week_id, None))

            print(f"‚úÖ Schedule inserted for course '{entry['course']}', subject '{entry['subject']}' with level '{entry['level']}' and weekly '{weekly_type_name}'.")

    except Exception as e:
        print("‚ùå Error processing entry:", entry)
        print("‚ùó Exception:", e)

conn.commit()
cursor.close()
conn.close()

print("üéâ ‚úÖ ‘≤’∏’¨’∏÷Ä ’ø’æ’µ’°’¨’∂’•÷Ä’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’∂’•÷Ä’¥’∏÷Ç’Æ’æ’•÷Å’´’∂ MSSQL-’´ ’¥’•’ª!")
