import pyodbc
import json
from collections import defaultdict

def extract_building_floor(room_number):
    """ ’é’•÷Ä’°’§’°÷Ä’±’∂’∏÷Ç’¥ ’ß ’¥’°’Ω’∂’°’∑’•’∂÷Ñ/’∞’°÷Ä’Ø key ’¨’Ω’°÷Ä’°’∂’´ ’∞’°’¥’°÷Ä’´÷Å """
    if not room_number:
        return "special"
    
    digits = ''.join(filter(str.isdigit, room_number))
    
    if len(digits) >= 5:
        return digits[:3]  # ’°’º’°’ª’´’∂ 3 ’©’´’æ’®
    elif len(digits) >= 4:
        return digits[:2]  # ’°’º’°’ª’´’∂ 2 ’©’´’æ’®
    else:
        return "special"  # ’•’©’• ’∑’°’ø ÷É’∏÷Ñ÷Ä ’Ø’°’¥ ’ø’°’º’•÷Ä ’∏÷Ç’∂’´

# üõ†Ô∏è 1. MSSQL Connection
conn = pyodbc.connect(
    "DRIVER={ODBC Driver 17 for SQL Server};"
    "SERVER=localhost;"
    "DATABASE=schedule;"
    "UID=admin;"
    "PWD=mypassword"
)
cursor = conn.cursor()

# üõ†Ô∏è 2. SQL ’∞’°÷Ä÷Å’∏÷Ç’¥
cursor.execute("""
SELECT room_number, type_name
FROM (
    SELECT 
        r.number AS room_number,
        ty.name AS type_name
    FROM Schedule s
    JOIN Rooms r ON s.room_id = r.id
    JOIN Types ty ON s.type_id = ty.id
) AS sub
GROUP BY room_number, type_name
""")
rows = cursor.fetchall()

# üõ†Ô∏è 3. ’ä’°’ø÷Ä’°’Ω’ø’∏÷Ç’¥ ’•’∂÷Ñ raw data
data = [{"room_number": row.room_number, "type_name": row.type_name} for row in rows]

# üõ†Ô∏è 4. ’ä’°’ø÷Ä’°’Ω’ø’∏÷Ç’¥ ’•’∂÷Ñ ‘¥’°’Ω / ‘≥’∏÷Ä’Æ / ‘º’°’¢ ’¢’°’™’°’∂’∏÷Ç’¥’®
categories = {
    "‘¥’°’Ω": defaultdict(list),
    "‘≥’∏÷Ä’Æ": defaultdict(list),
    "‘º’°’¢": defaultdict(list)
}

for entry in data:
    room = entry["room_number"]
    typ = entry["type_name"]
    key = extract_building_floor(room)
    
    if any(word in typ for word in ["‘º’°’¢", "‘º’°’¢1", "‘º’°’¢2", "‘º’°’¢3", "‘º’°’¢4", "‘º’°’¢5"]):
        categories["‘º’°’¢"][key].append(room)
    elif any(word in typ for word in ["‘≥’∏÷Ä’Æ", "‘≥’∏÷Ä’Æ1", "‘≥’∏÷Ä’Æ2", "‘≥’∏÷Ä’Æ3", "‘≥’∏÷Ä’Æ4", "‘≥’∏÷Ä’Æ5"]):
        categories["‘≥’∏÷Ä’Æ"][key].append(room)
    elif "‘¥’°’Ω" in typ:
        categories["‘¥’°’Ω"][key].append(room)

# üõ†Ô∏è 5. ‘±’æ’°÷Ä’ø‚Ä§ ’£÷Ä’∏÷Ç’¥ ’•’∂÷Ñ JSON ÷Ü’°’µ’¨
with open("rooms_grouped_by_floor.json", "w", encoding="utf-8") as f:
    json.dump(categories, f, ensure_ascii=False, indent=2)

print("‚úÖ JSON ÷Ü’°’µ’¨’® ’∫’°’ø÷Ä’°’Ω’ø ’ß÷â")
