// üîπ ‘≥’¨’∏’¢’°’¨ ÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä
let scheduleData = [];
let currentCourseYear = "1"; // ’ç’Ø’¶’¢’∏÷Ç’¥ 1-’´’∂ ’Ø’∏÷Ç÷Ä’Ω’∂ ’ß ’®’∂’ø÷Ä’æ’°’Æ
let courseGroups = {};

// üîπ API-’´÷Å ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’´ ’¢’•’º’∂’∏÷Ç’¥
document.addEventListener("DOMContentLoaded", () => {
    fetch('http://localhost:3000/api/schedule')
        .then(response => response.json())
        .then(data => {
            console.log("üìå API-’´÷Å ’Ω’ø’°÷Å’æ’°’Æ ’ø’æ’µ’°’¨’∂’•÷Ä’®:", data);

            if (!data || data.length === 0) {
                console.warn("‚ö†Ô∏è API-’´÷Å ’ø’æ’µ’°’¨’∂’•÷Ä ’π’Ø’°’∂:");
                return;
            }

            scheduleData = data;

            courseGroups = {
                "1": data.filter(entry => entry.course_code.match(/\d/)[0] === "4"),
                "2": data.filter(entry => entry.course_code.match(/\d/)[0] === "3"),
                "3": data.filter(entry => entry.course_code.match(/\d/)[0] === "2"),
                "4": data.filter(entry => entry.course_code.match(/\d/)[0] === "1")
            };

            console.log("üîç ’ç’ø’•’≤’Æ’æ’°’Æ courseGroups:", courseGroups);

            // ‚úÖ ‘±’Ø’ø’´’æ’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’®
            activateCourseButtons();

            // ‚úÖ ’ç’Ø’¶’¢’∏÷Ç’¥ ÷Å’∏÷Ç’µ÷Å ’•’∂÷Ñ ’ø’°’¨’´’Ω 1-’´’∂ ’Ø’∏÷Ç÷Ä’Ω’´ ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’®
            filterByCourse(currentCourseYear, courseGroups);
        })
        .catch(error => console.error("‚ùå API-’´ ’Ω’≠’°’¨:", error));
});

// üîπ ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’´ ’Ø’°’∫’∏÷Ç’¥
function activateCourseButtons() {
    console.log("üìå ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’® ’°’Ø’ø’´’æ’°÷Å’æ’∏÷Ç’¥ ’•’∂");

    const courseButtons = document.querySelectorAll(".course-btn");

    if (!courseButtons || courseButtons.length === 0) {
        console.error("‚õî ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’® ’π’•’∂ ’£’ø’∂’æ’•’¨!");
        return;
    }

    courseButtons.forEach(button => {
        console.log(`‚úÖ ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø ’£’ø’∂’æ’•÷Å: ${button.textContent}`);

        button.addEventListener("click", function () {
            const selectedCourse = this.dataset.course;
            console.log(`üìå ’ç’•’≤’¥’æ’•÷Å ${selectedCourse}-÷Ä’§ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’®`);

            if (courseGroups[selectedCourse]) {
                console.log(`‚úÖ ‘≥’ø’∂’æ’°’Æ ’ø’æ’µ’°’¨’∂’•÷Ä ${selectedCourse}-÷Ä’§ ’Ø’∏÷Ç÷Ä’Ω’´ ’∞’°’¥’°÷Ä:`, courseGroups[selectedCourse]);
            } else {
                console.warn(`‚ùå ’è’æ’µ’°’¨’∂’•÷Ä ’π’Ø’°’∂ ${selectedCourse}-÷Ä’§ ’Ø’∏÷Ç÷Ä’Ω’´ ’∞’°’¥’°÷Ä`);
            }

            // ‚úÖ ‘π’°÷Ä’¥’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’®
            updateCourseFilter(selectedCourse);
            
            // ‚úÖ ’ë’∏÷Ç’µ÷Å ’•’∂÷Ñ ’ø’°’¨’´’Ω ’®’∂’ø÷Ä’æ’°’Æ ’Ø’∏÷Ç÷Ä’Ω’´ ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’®
            filterByCourse(selectedCourse, courseGroups);
        });
    });
}


// üîπ ’ñ’´’¨’ø÷Ä’´ ’©’°÷Ä’¥’°÷Å’∏÷Ç’¥ (‘∏’Ω’ø ’®’∂’ø÷Ä’æ’°’Æ ’Ø’∏÷Ç÷Ä’Ω’´)
function updateCourseFilter(selectedCourse) {
    console.log(`üìå ’ñ’´’¨’ø÷Ä’® ’©’°÷Ä’¥’°÷Å’æ’∏÷Ç’¥ ’ß ${selectedCourse}-÷Ä’§ ’Ø’∏÷Ç÷Ä’Ω’´ ’∞’°’¥’°÷Ä`);

    const courseCodeFilter = document.getElementById("courseCodeFilter");
    if (!courseCodeFilter) {
        console.error("‚ö†Ô∏è ’ñ’´’¨’ø÷Ä’´ ’ø’°÷Ä÷Ä’® ’π’´ ’£’ø’∂’æ’•’¨!");
        return;
    }

    courseCodeFilter.innerHTML = "";

    const defaultOption = document.createElement("option");
    defaultOption.value = "";
    defaultOption.textContent = "‘≤’∏’¨’∏÷Ä’®";
    courseCodeFilter.appendChild(defaultOption);

    if (!courseGroups[selectedCourse] || courseGroups[selectedCourse].length === 0) {
        console.warn(`‚ùå ${selectedCourse}-÷Ä’§ ’Ø’∏÷Ç÷Ä’Ω’´ ’∞’°’¥’°÷Ä ’π’Ø’°’∂ ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’∂’•÷Ä`);
        return;
    }

    const uniqueCourseCodes = [...new Set(courseGroups[selectedCourse].map(item => item.course_code))].sort();

    uniqueCourseCodes.forEach(code => {
        const option = document.createElement("option");
        option.value = code;
        option.textContent = code;
        courseCodeFilter.appendChild(option);
    });

    console.log("‚úÖ ’ñ’´’¨’ø÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä’® ’©’°÷Ä’¥’°÷Å’æ’•÷Å’´’∂:", uniqueCourseCodes);
}

// üîπ ‘¥’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’´ ÷Ü’´’¨’ø÷Ä’∏÷Ç’¥ ’®’Ω’ø ’Ø’∏÷Ç÷Ä’Ω’´
function filterByCourse(selectedCourse, courseGroups) {
    console.log(`üìå filterByCourse ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂ ’Ø’°’∂’π’æ’•÷Å ’Ø’∏÷Ç÷Ä’Ω’´ ’∞’°’¥’°÷Ä: ${selectedCourse}`);

    if (!courseGroups[selectedCourse] || courseGroups[selectedCourse].length === 0) {
        console.warn(`‚ùå No Schedule Found for Course ${selectedCourse}`);
        return;
    }

    console.log(`‚úÖ filterByCourse ’Ω’ø’°÷Å’°’æ ’ø’æ’µ’°’¨’∂’•÷Ä:`, courseGroups[selectedCourse]);

    renderTables(courseGroups[selectedCourse]);
}

// üîπ ’ñ’´’¨’ø÷Ä’´ "’Ä’°’Ω’ø’°’ø’•’¨" ’Ø’∏’≥’°’Ø’´ ’´÷Ä’°’§’°÷Ä’±’∏÷Ç’©’µ’∏÷Ç’∂
document.getElementById("applyFilter").addEventListener("click", function () {
    const selectedCode = document.getElementById("courseCodeFilter").value;
    console.log(`üìå ‘∏’∂’ø÷Ä’æ’•’¨ ’ß ÷Ü’´’¨’ø÷Ä’´ ’°÷Ä’™’•÷Ñ’®: ${selectedCode}`);

    filterScheduleByCourseCode(selectedCode);
});

// üîπ ‘¥’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’´ ÷Ü’´’¨’ø÷Ä’∏÷Ç’¥ ’®’Ω’ø ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§’´
function filterScheduleByCourseCode(selectedCode) {
    const scheduleContainer = document.getElementById("scheduleContainer");

    if (!scheduleContainer) {
        console.error("‚õî scheduleContainer ’ø’°÷Ä÷Ä’® ’π’´ ’£’ø’∂’æ’•’¨!");
        return;
    }

    scheduleContainer.innerHTML = "";

    if (!selectedCode || selectedCode === "") {
        console.log("üìå ’ë’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¢’∏’¨’∏÷Ä ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’∂’•÷Ä’®");
        filterByCourse(currentCourseYear, courseGroups);
        return;
    }

    const filteredEntries = scheduleData.filter(entry => entry.course_code === selectedCode);
    
    if (filteredEntries.length === 0) {
        scheduleContainer.innerHTML = `<p style="color: red;">üì¢ No schedule available for ${selectedCode}!</p>`;
        return;
    }

    console.log(`‚úÖ ${selectedCode}-’´ ’∞’°’¥’°÷Ä ’£’ø’∂’æ’•÷Å ${filteredEntries.length} ’§’°’Ω`);

    buildScheduleTable("scheduleContainer", filteredEntries);
}

// üîπ HTML ’°’≤’µ’∏÷Ç’Ω’°’Ø’´ ’Ø’°’º’∏÷Ç÷Å’∏÷Ç’¥
function buildScheduleTable(containerId, entries) {
    const container = document.getElementById(containerId);
    if (!container) {
        console.error(`‚õî Container with id ${containerId} not found.`);
        return;
    }

    const table = document.createElement("table");
    table.className = "schedule-table";

    const thead = document.createElement("thead");
    const headerRow = document.createElement("tr");
    headerRow.innerHTML = "<th>‘∫’°’¥</th>" + ["‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"]
        .map(day => `<th>${day}</th>`).join("");
    thead.appendChild(headerRow);
    table.appendChild(thead);

    const tbody = document.createElement("tbody");

    ["09:30-10:50", "11:00-12:20", "12:50-14:10", "14:20-15:40"].forEach(slot => {
        const row = document.createElement("tr");
        row.innerHTML = `<td>${slot}</td>` + ["‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"]
            .map(day => `<td class='schedule-cell' data-day='${day}' data-slot='${slot}'>-</td>`).join("");
        tbody.appendChild(row);
    });

    table.appendChild(tbody);
    container.innerHTML = "";
    container.appendChild(table);
}



// // ‚úÖ ’ñ’´’¨’ø÷Ä’∏’≤ ÷Ü’∏÷Ç’∂’Ø÷Å’´’° (1-’´’∂, 2-÷Ä’§, 3-÷Ä’§, 4-÷Ä’§ ’Ø’∏÷Ç÷Ä’Ω’•÷Ä’®)
// function filterByCourse(selectedCourse, courseGroups) {
//     console.log(`üìå filterByCourse ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂ ’Ø’°’∂’π’æ’•÷Å ’Ø’∏÷Ç÷Ä’Ω’´ ’∞’°’¥’°÷Ä: ${selectedCourse}`);

//     if (!courseGroups[selectedCourse] || courseGroups[selectedCourse].length === 0) {
//         console.warn(`‚ùå No Schedule Found for Course ${selectedCourse}`);
//         return;
//     }

//     console.log(`‚úÖ filterByCourse ’Ω’ø’°÷Å’°’æ ’ø’æ’µ’°’¨’∂’•÷Ä:`, courseGroups[selectedCourse]);

//     renderTables(courseGroups[selectedCourse]);
// }



function renderTables(scheduleData) {
    console.log("üìå Creating Tables with Data:", scheduleData);

    const container = document.getElementById("scheduleContainer");
    
    // ‚úÖ ’ä’°’∞’∫’°’∂’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’´ ’ø’°÷Ä÷Ä’®
    const filterContainer = document.querySelector(".filter-container");
    if (!filterContainer) {
        console.error("‚ö†Ô∏è ’ñ’´’¨’ø÷Ä’® ’π’´ ’£’ø’∂’æ’•’¨!");
        return;
    }

    // ‚úÖ ’Ñ’°÷Ñ÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¥’´’°’µ’∂ ’°’≤’µ’∏÷Ç’Ω’°’Ø’∂’•÷Ä’®, ’°’µ’¨ ’∏’π ’©’• ’°’¥’¢’∏’≤’ª ’Ø’∏’∂’ø’•’µ’∂’•÷Ä’®
    container.querySelectorAll("table, h2, p").forEach(element => element.remove());

    let uniqueCourseCodes = [...new Set(scheduleData.map(item => item.course_code))].sort();

    uniqueCourseCodes.forEach(courseCode => {
        ["’∞’°’¥’°÷Ä’´’π", "’∞’°’µ’ø’°÷Ä’°÷Ä"].forEach(weekType => {
            const filteredData = scheduleData.filter(
                item => item.course_code === courseCode && item.week_type === weekType
            );

            if (filteredData.length === 0) {
                const noDataMessage = document.createElement("p");
                noDataMessage.classList.add("no-schedule");
                noDataMessage.textContent = `${courseCode} - ${weekType}: ’Ü’•÷Ä’Ø’° ’∫’°’∞’´’∂ ’ø’æ’µ’°’¨’∂’•÷Ä ’π’Ø’°’∂`;
                container.appendChild(noDataMessage);
                return;
            }

            const courseTitle = document.createElement("h2");
            courseTitle.textContent = `${courseCode} - ${weekType}`;
            container.appendChild(courseTitle);

            const table = document.createElement("table");
            table.classList.add("schedule-table");

            const thead = document.createElement("thead");
            const headerRow = document.createElement("tr");

            ["‘∫’°’¥", "‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"].forEach(day => {
                const th = document.createElement("th");
                th.textContent = day;
                headerRow.appendChild(th);
            });

            thead.appendChild(headerRow);
            table.appendChild(thead);

            const tbody = document.createElement("tbody");

            const timeSlots = ["09:30-10:50", "11:00-12:20", "12:50-14:10", "14:20-15:40"];

            timeSlots.forEach(slot => {
                const row = document.createElement("tr");

                const timeCell = document.createElement("td");
                timeCell.textContent = slot;
                row.appendChild(timeCell);

                ["‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"].forEach(day => {
                    const cell = document.createElement("td");
                    const lessons = filteredData.filter(
                        entry => entry.day_name === day && entry.time_slot === slot
                    );

                    if (lessons.length > 0) {
                        lessons.forEach(lesson => {
                            const lessonDiv = document.createElement("div");
                            const typeEmojiMap = {
                                "‘¥’°’Ω": "üìñ",
                                "‘º’°’¢": "üî¨",
                                "‘º’°’¢1": "üî¨", 
                                "‘º’°’¢1": "üî¨", 
                                "‘º’°’¢1": "üî¨", 
                                "‘º’°’¢1": "üî¨", 
                                "‘º’°’¢1": "üî¨", 
                                "‘≥’∏÷Ä’Æ": "üõ†Ô∏è",
                                "‘≥’∏÷Ä’Æ1": "üõ†Ô∏è",
                                "‘≥’∏÷Ä’Æ2": "üõ†Ô∏è",
                                "‘≥’∏÷Ä’Æ3": "üõ†Ô∏è",
                                "‘≥’∏÷Ä’Æ4": "üõ†Ô∏è",
                            };

                            const lessonText = `${typeEmojiMap[lesson.type_name] || "üìå"} ${lesson.subject_name}`;
                            lessonDiv.textContent = lessonText;

                            lessonDiv.dataset.subject = lesson.subject_name;
                            lessonDiv.dataset.teacher = lesson.teacher_name;
                            lessonDiv.dataset.room = lesson.room_number;
                            lessonDiv.dataset.type = lesson.type_name;

                            lessonDiv.addEventListener("click", () => openPopup(lessonDiv));

                            cell.appendChild(lessonDiv);
                        });
                    } else {
                        cell.textContent = "-";
                    }

                    row.appendChild(cell);
                });

                tbody.appendChild(row);
            });

            table.appendChild(tbody);
            container.appendChild(table);
        });
    });

    // ‚úÖ ’é’•÷Ä’°’§’°÷Ä’±’∂’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’´ ’ø’°÷Ä÷Ä’® ’´÷Ä ’ø’•’≤’®
    container.prepend(filterContainer);
}


// ‚úÖ ’ì’∏÷É’°÷É ’¢’°÷Å’•’¨’∏÷Ç ÷Ü’∏÷Ç’∂’Ø÷Å’´’°
function openPopup(element) {
    const popup = document.getElementById("classPopup");
    document.getElementById("popupSubject").textContent = element.dataset.subject || "‘±’º’°÷Ä’Ø’° ’π’Ω’ø’°÷Å’æ’•÷Å";
    document.getElementById("popupTeacher").textContent = element.dataset.teacher || "‘¥’°’Ω’°’≠’∏’Ω ’π’Ω’ø’°÷Å’æ’•÷Å";
    document.getElementById("popupRoom").textContent = element.dataset.room || "‘º’Ω’°÷Ä’°’∂ ’π’Ω’ø’°÷Å’æ’•÷Å";
    document.getElementById("popupType").textContent = element.dataset.type || "’è’´’∫ ’π’Ω’ø’°÷Å’æ’•÷Å";
    popup.classList.remove("hidden");
    popup.style.display = "block";
}



// ‚úÖ ’ñ’´’¨’ø÷Ä’´ ’®’∂’ø÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® ’∫’°’∞’∏÷Ç’¥ ’•’∂÷Ñ localStorage-’∏÷Ç’¥
function saveFilterSelection() {
    const selectedFilter = document.getElementById("courseCodeFilter").value;
    localStorage.setItem("selectedCourseCode", selectedFilter);
}

// ‚úÖ ‘∑’ª’´ ’¢’•’º’∂’∏÷Ç’¥’´÷Å ’∞’•’ø’∏ ’Ø÷Ä’Ø’´’∂ ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥ ’•’∂÷Ñ ’∫’°’∞’æ’°’Æ ÷Ü’´’¨’ø÷Ä’®
function restoreFilterSelection() {
    const savedFilter = localStorage.getItem("selectedCourseCode");
    if (savedFilter) {
        //document.getElementById("courseCodeFilter").value = savedFilter;
        filterScheduleByCourseCode(savedFilter);
    }
}

// // ‚úÖ ’ñ’´’¨’ø÷Ä’´ ’∞’°’Ω’ø’°’ø’¥’°’∂ ’Ø’∏’≥’°’Ø’´ ’æ÷Ä’° ’°’æ’•’¨’°÷Å’∂’•’∂÷Ñ saveFilterSelection
// document.getElementById("applyFilter").addEventListener("click", function() {
//     saveFilterSelection(); // ‚úÖ ’ä’°’∞’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä’®
//     let selectedCode = document.getElementById("courseCodeFilter").value;
//     filterScheduleByCourseCode(selectedCode);
// });

// ‚úÖ ‘∑’ª’´ ’¢’•’º’∂’∏÷Ç’¥’´÷Å ’∞’•’ø’∏ ’æ’•÷Ä’Ω’ø’´’∂ ’¢’•’º’∂’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’´ ’®’∂’ø÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®
document.addEventListener("DOMContentLoaded", restoreFilterSelection);


// // ‚úÖ ’ñ’´’¨’ø÷Ä’∏’≤ ÷Ü’∏÷Ç’∂’Ø÷Å’´’° ’®’Ω’ø ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§’´
// function filterScheduleByCourseCode(selectedCode) {
//     let tables = document.querySelectorAll(".schedule-table");

//     tables.forEach(table => {
//         // ‚úÖ ’ë’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¥’´’°’µ’∂ ’®’∂’ø÷Ä’æ’°’Æ ’Ø’∏÷Ç÷Ä’Ω’´ ’°’≤’µ’∏÷Ç’Ω’°’Ø’®
//         if (selectedCode === "" || table.id.includes(selectedCode)) {
//             table.style.display = "table";
//         } else {
//             table.style.display = "none";
//         }
//     });
// }


// ‚úÖ ’ì’°’Ø’•’¨’∏÷Ç ÷Ü’∏÷Ç’∂’Ø÷Å’´’° (’°’∑’≠’°’ø’∏÷Ç’¥ ’ß ’¢’∏’¨’∏÷Ä ’§’•’∫÷Ñ’•÷Ä’∏÷Ç’¥)
function closePopup() {
    const popup = document.getElementById("classPopup");
    if (!popup) {
        console.error("‚õî Popup element not found!");
        return;
    }

    popup.classList.add("hidden"); // ‚úÖ ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ `hidden` ’§’°’Ω’®
    popup.style.display = "none"; // ‚úÖ ‘µ’©’• CSS-’∏÷Ç’¥ ’≠’∂’§’´÷Ä ’¨’´’∂’´, ’Ω’° ’ß’¨ ’Ø’°’∑’≠’°’ø’´

    console.log("‚úÖ Popup closed!");
}



// üîπ ’ñ’∏÷Ç’∂’Ø÷Å’´’°’ù API-’´÷Å ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’´ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’¢’•’º’∂’∏÷Ç’¥
async function loadSchedule() {
    try {
        console.log("üì° Fetching schedule from API...");
        const response = await fetch("/api/schedule");
        const scheduleData = await response.json();

        console.log("‚úÖ Full Schedule Data with course_code:", JSON.stringify(scheduleData, null, 2));

        if (!scheduleData || scheduleData.length === 0) {
            console.warn("‚ö†Ô∏è No schedule data received from API!");
            return;
        }

        scheduleData.forEach(item => {
            if (!item.course_code) {
                console.warn("‚ö†Ô∏è Missing course_code in:", item);
            }
        });

        displaySchedule(scheduleData);
    } catch (error) {
        console.error("‚ùå Error loading schedule:", error);
    }
}


function displaySchedule(scheduleData) {
    const scheduleContainer = document.getElementById("scheduleContainer");
    scheduleContainer.innerHTML = "";

    scheduleData.forEach((item) => {
        const scheduleItem = document.createElement("div");
        scheduleItem.classList.add("schedule-item");
        scheduleItem.innerHTML = `
            <p><strong>‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§’®:</strong> ${item.course_code}</p>
            <p><strong>’ï÷Ä:</strong> ${item.day_name}</p>
            <p><strong>‘∫’°’¥:</strong> ${item.time_slot}</p>
            <p><strong>‘±’º’°÷Ä’Ø’°:</strong> ${item.subject_name}</p>
            <p><strong>‘¥’°’Ω’°÷Ä’°’∂:</strong> ${item.room_number}</p>
            <p><strong>‘¥’°’Ω’°’≠’∏’Ω:</strong> ${item.teacher_name}</p>
            <p><strong>‘¥’°’Ω’´ ’ø’•’Ω’°’Ø:</strong> ${item.type_name}</p>
        `;
        scheduleContainer.appendChild(scheduleItem);
    });
}


// üîπ ’ñ’∏÷Ç’∂’Ø÷Å’´’°’ù API-’´÷Å ’Ø’∏÷Ç÷Ä’Ω’•÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’¢’•’º’∂’∏÷Ç’¥
async function loadCourses() {
    try {
        console.log("üì° Fetching courses from API...");
        const response = await fetch("/api/courses");
        if (!response.ok) throw new Error(`‚ö†Ô∏è Server error: ${response.status}`);
        const courses = await response.json();

        console.log("‚úÖ Raw Courses Data:", courses);
        console.log("üîç First Course Example:", courses[0]); // ’ç’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ ’°’º’°’ª’´’∂ ’Ø’∏÷Ç÷Ä’Ω’´ ÷Ö÷Ä’´’∂’°’Ø’®

        // ’Ñ’°÷Ñ’∏÷Ç÷Ä courseMap-’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥
        courseMap = { "1": [], "2": [], "3": [], "4": [] };

        courses.forEach(course => {
            const courseCode = course.code || course.course_code || course.id;
            if (!courseCode) {
                console.warn("‚ö†Ô∏è Course entry missing 'code':", course);
                return;
            }

            const firstDigit = courseCode.match(/\d/); // ‘≥’ø’∂’∏÷Ç’¥ ’•’∂÷Ñ ’°’º’°’ª’´’∂ ’©’´’æ’®
            if (!firstDigit) {
                console.warn(`‚ö†Ô∏è No digit found in course code: ${courseCode}`);
                return;
            }

            const year = firstDigit[0];
            if (year === "4") courseMap["1"].push(courseCode);
            else if (year === "3") courseMap["2"].push(courseCode);
            else if (year === "2") courseMap["3"].push(courseCode);
            else if (year === "1") courseMap["4"].push(courseCode);
        });

        console.log("‚úÖ courseMap after processing:", courseMap);
    } catch (error) {
        console.error("‚õî Error loading courses:", error);
    }
}

function filterScheduleByCourseYear(courseYear) {
    const courseCodes = courseMap[courseYear] || [];
    console.log("üîç Course Codes for Year:", courseYear, "‚Üí", courseCodes);

    if (courseCodes.length === 0) {
        console.warn(`‚ö†Ô∏è No course codes found for year ${courseYear}`);
        return;
    }

    const scheduleContainer = document.getElementById("scheduleContainer");
    if (!scheduleContainer) {
        console.error("‚õî scheduleContainer not found in DOM!");
        return;
    }

    scheduleContainer.innerHTML = "";
    let foundAny = false;

    courseCodes.forEach(courseCode => {
        console.log(`üîç Checking for course code: ${courseCode}`);

        const filteredEntries = scheduleData.filter(entry => {
            if (!entry.course_code) {
                console.warn(`‚ö†Ô∏è Missing course_code for entry:`, entry);
                return false; // ’â÷É’∏÷Ä’±’•’∂÷Ñ ’∞’°’¥’•’¥’°’ø’•’¨ `undefined`
            }
            return entry.course_code.trim() === courseCode.trim();
        });

        console.log(`üìå Found ${filteredEntries.length} entries for course code: ${courseCode}`);

        if (filteredEntries.length > 0) {
            foundAny = true;
            const courseTitle = document.createElement("h2");
            courseTitle.textContent = `‘¥’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø - ${courseCode}`;
            scheduleContainer.appendChild(courseTitle);

            const tableDiv = document.createElement("div");
            tableDiv.id = `schedule-${courseCode}`;
            scheduleContainer.appendChild(tableDiv);

            buildScheduleTable(tableDiv.id, filteredEntries);
        } else {
            console.warn(`‚ö†Ô∏è No schedule found for course code: ${courseCode}`);
        }
    });

    if (!foundAny) {
        scheduleContainer.innerHTML = `<p style="color: red;">üì¢ No schedules available for this year!</p>`;
    }
}


// // üîπ ’ñ’∏÷Ç’∂’Ø÷Å’´’°’ù HTML ’°’≤’µ’∏÷Ç’Ω’°’Ø’´ ’Ø’°’º’∏÷Ç÷Å’∏÷Ç’¥
// function buildScheduleTable(containerId, entries) {
//     const container = document.getElementById(containerId);
//     if (!container) {
//         console.error(`‚õî Container with id ${containerId} not found.`);
//         return;
//     }

//     const table = document.createElement("table");
//     table.className = "schedule-table";

//     const thead = document.createElement("thead");
//     const headerRow = document.createElement("tr");
//     headerRow.innerHTML = "<th>‘∫’°’¥</th>" + days.map(day => `<th>${day}</th>`).join("");
//     thead.appendChild(headerRow);
//     table.appendChild(thead);

//     const tbody = document.createElement("tbody");
//     timeSlots.forEach(slot => {
//         const row = document.createElement("tr");
//         row.innerHTML = `<td>${slot}</td>` + days.map(day => `<td class='schedule-cell' data-day='${day}' data-slot='${slot}'>-</td>`).join("");
//         tbody.appendChild(row);
//     });
//     table.appendChild(tbody);

//     container.innerHTML = "";
//     container.appendChild(table);
// }
