// üîπ ‘≥’¨’∏’¢’°’¨ ÷É’∏÷É’∏’≠’°’Ø’°’∂’∂’•÷Ä
let scheduleData = [];
let levelGroups = {}; 
let currentLevel = "‘±’º’°’ª’´’∂"; 

document.addEventListener("DOMContentLoaded", async () => {
    console.log("üìå DOM fully loaded");

    restoreFilterSelection();  // ‚úÖ ’Ü’°’≠ ’æ’•÷Ä’°’Ø’°’∂’£’∂’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’®
    await loadSchedule();      // ‚úÖ ‘≤’•’º’∂’∏÷Ç’¥ ’•’∂÷Ñ ’°’¥’¢’∏’≤’ª ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’® (API-’´÷Å)
    activateCourseButtons();   // ‚úÖ ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’® ’¥’´’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ
    updateCourseFilter();      // ‚úÖ ‘π’°÷Ä’¥’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§’•÷Ä’´ dropdown-’®
    filterByCourse(currentLevel); // ‚úÖ ’ë’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’°’º’°’ª’´’∂ ’Ø’∏÷Ç÷Ä’Ω’´ ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’®
});


// document.addEventListener("DOMContentLoaded", () => {
//     fetch('http://localhost:3000/api/schedule')
//         .then(response => response.json())
//         .then(data => {
//             console.log("üìå API-’´÷Å ’Ω’ø’°÷Å’æ’°’Æ ’ø’æ’µ’°’¨’∂’•÷Ä’®:", data);

//             if (!data || data.length === 0) {
//                 console.warn("‚ö†Ô∏è API-’´÷Å ’ø’æ’µ’°’¨’∂’•÷Ä ’π’Ø’°’∂:");
//                 return;
//             }

//             scheduleData = data;

//             // ‘ø’°’¶’¥’∏÷Ç’¥ ’•’∂÷Ñ levelGroups ’®’Ω’ø level_name-’´ (‘±’º’°’ª’´’∂, ‘µ÷Ä’Ø÷Ä’∏÷Ä’§, ‘µ÷Ä÷Ä’∏÷Ä’§, ’â’∏÷Ä÷Ä’∏÷Ä’§)
//             levelGroups = {};
//             data.forEach(entry => {
//                 let level = entry.level_name;
//                 if (!level) {
//                     console.warn("‚ö†Ô∏è entry-’∏÷Ç’¥ level ’ø’æ’µ’°’¨’® ’¢’°÷Å’°’Ø’°’µ’∏÷Ç’¥ ’ß:", entry);
//                     return;
//                 }
//                 if (!levelGroups[level]) {
//                     levelGroups[level] = [];
//                 }
//                 levelGroups[level].push(entry);
//             });

//             console.log("üîç ’ç’ø’•’≤’Æ’æ’°’Æ levelGroups:", levelGroups);

//             // ‚úÖ ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’® ’¥’´’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ
//             activateCourseButtons();

//             // ‚úÖ ’ç’Ø’¶’¢’∏÷Ç’¥ ÷Å’∏÷Ç’µ÷Å ’•’∂÷Ñ ’ø’°’¨’´’Ω "‘±’º’°’ª’´’∂" ’Ø’∏÷Ç÷Ä’Ω’´ ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’®
//             filterByCourse("‘±’º’°’ª’´’∂");
//         })
//         .catch(error => console.error("‚ùå API-’´ ’Ω’≠’°’¨:", error));
// });


async function loadCourseCodes() {
    try {
        console.log("üì° Fetching course codes...");
        const response = await fetch("/api/courses");
        if (!response.ok) throw new Error(`Server error: ${response.status}`);

        const courses = await response.json();
        console.log("‚úÖ Courses loaded:", courses); // ‚úÖ ’ç’ø’∏÷Ç’£’•’¨’∏÷Ç ’∞’°’¥’°÷Ä console-’∏÷Ç’¥

        const courseCodeSelect = document.getElementById("courseCodeFilter"); // ’ç’ø’∏÷Ç’£’´÷Ä, ’∏÷Ä ’≥’´’∑’ø ID ’ß
        if (!courseCodeSelect) {
            console.error("‚õî Course code dropdown not found!");
            return;
        }

        courseCodeSelect.innerHTML = `<option value="">‘∏’∂’ø÷Ä’•’¨ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§...</option>`; // ’ç’Ø’¶’¢’∂’°’Ø’°’∂ ’ø’°÷Ä’¢’•÷Ä’°’Ø

        courses.forEach(course => {
            const option = document.createElement("option");
            option.value = course.code;
            option.textContent = course.code;
            courseCodeSelect.appendChild(option);
        });

        courseCodeSelect.disabled = false; // ‘±’∂’ª’°’ø’æ’°’Æ’´÷Å ’°’Ø’ø’´’æ ’§’°÷Ä’±’∂’•’¨
        console.log("‚úÖ Course codes successfully added to the dropdown.");

    } catch (error) {
        console.error("‚õî Error loading course codes:", error);
    }
}

// ‘∑’ª’® ’¢’•’º’∂’æ’•’¨’∏÷Ç÷Å ’∞’•’ø’∏ ’¢’•’º’∂’∏÷Ç’¥ ’•’∂÷Ñ ’Ø’∏÷Ç÷Ä’Ω’•÷Ä’´ ’Ø’∏’§’•÷Ä’®
document.addEventListener("DOMContentLoaded", loadCourseCodes);

function activateCourseButtons() {
    console.log("üìå ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’® ’°’Ø’ø’´’æ’°÷Å’æ’∏÷Ç’¥ ’•’∂");

    const courseButtons = document.querySelectorAll(".course-btn");
    if (!courseButtons || courseButtons.length === 0) {
        console.error("‚õî ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’® ’π’•’∂ ’£’ø’∂’æ’•’¨!");
        return;
    }

    const levelMap = {
        "1": "‘±’º’°’ª’´’∂",
        "2": "‘µ÷Ä’Ø÷Ä’∏÷Ä’§",
        "3": "‘µ÷Ä÷Ä’∏÷Ä’§",
        "4": "’â’∏÷Ä÷Ä’∏÷Ä’§"
    };

    courseButtons.forEach(button => {
        console.log(`‚úÖ ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø ’£’ø’∂’æ’•÷Å: ${button.textContent}`);

        button.addEventListener("click", function () {
            const selectedLevelNumber = this.dataset.course;

            if (!selectedLevelNumber || !levelMap[selectedLevelNumber]) {
                console.error("‚õî ‘±’∂’æ’°’æ’•÷Ä ’Ø’∏÷Ç÷Ä’Ω’´ ’®’∂’ø÷Ä’∏÷Ç’©’µ’∏÷Ç’∂:", selectedLevelNumber);
                return;
            }

            const selectedLevel = levelMap[selectedLevelNumber]; // ’é’•÷Ä’°’Æ’∏÷Ç’¥ ’•’∂÷Ñ ’≥’´’∑’ø ’°’∂’∏÷Ç’∂’´’∂
            console.log(`üìå ’ç’•’≤’¥’æ’•÷Å ${selectedLevelNumber}-÷Ä’§ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’®, ’∏÷Ä’® ’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂’∏÷Ç’¥ ’ß "${selectedLevel}"`);

            currentLevel = selectedLevel;
            filterByCourse(selectedLevel);
        });
    });
}

// üîπ ‘¥’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’´ ÷Ü’´’¨’ø÷Ä’∏÷Ç’¥ ’®’Ω’ø ’Ø’∏÷Ç÷Ä’Ω’´
function filterByCourse(selectedLevel) {
    console.log(`üìå filterByCourse ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂ ’Ø’°’∂’π’æ’•÷Å ’Ø’∏÷Ç÷Ä’Ω’´ ’∞’°’¥’°÷Ä: ${selectedLevel}`);

    const scheduleContainer = document.getElementById("scheduleContainer");
    if (!scheduleContainer) {
        console.error("‚õî scheduleContainer ’ø’°÷Ä÷Ä’® ’π’´ ’£’ø’∂’æ’•’¨!");
        return;
    }

    // ‚úÖ ’Ñ’°÷Ñ÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’°’¥’¢’∏’≤’ª ’°’≤’µ’∏÷Ç’Ω’°’Ø’®
    scheduleContainer.innerHTML = "";

    if (!levelGroups[selectedLevel] || levelGroups[selectedLevel].length === 0) {
        console.warn(`‚ùå No Schedule Found for ${selectedLevel}`);
        scheduleContainer.innerHTML = `<p style="color: red;">üì¢ No schedule available for ${selectedLevel}!</p>`;
        return;
    }

    console.log(`‚úÖ filterByCourse ’Ω’ø’°÷Å’°’æ ’ø’æ’µ’°’¨’∂’•÷Ä:`, levelGroups[selectedLevel]);

    renderTables(levelGroups[selectedLevel]);
}

function applyFilter() {
    const selectedCode = document.getElementById("courseCodeFilter").value;
    
    console.log(`üìå ‘∏’∂’ø÷Ä’æ’°’Æ ’Ø’∏÷Ç÷Ä’Ω’®: ${currentLevel}`);
    console.log(`üìå ‘∏’∂’ø÷Ä’æ’°’Æ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§’®: ${selectedCode}`);

    if (!selectedCode) {
        filterByCourse(currentLevel);
        return;
    }

    if (!levelGroups[currentLevel]) {
        console.warn(`‚ùå No schedule data found for course level: ${currentLevel}`);
        return;
    }

    // üîπ ’ñ’´’¨’ø÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’ø’æ’µ’°’¨ ’Ø’∏÷Ç÷Ä’Ω’´ ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’® ’®’Ω’ø ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§’´
    const filteredEntries = levelGroups[currentLevel].filter(entry => 
        entry.course_code === selectedCode
    );

    console.log(`‚úÖ ’ñ’´’¨’ø÷Ä’æ’°’Æ ’ø’æ’µ’°’¨’∂’•÷Ä ${selectedCode}-’´ ’∞’°’¥’°÷Ä:`, filteredEntries);

    if (filteredEntries.length === 0) {
        document.getElementById("scheduleContainer").innerHTML = `<p style="color: red;">üì¢ No schedule available for ${selectedCode}!</p>`;
        return;
    }

    renderTables(filteredEntries);
}

function buildScheduleTable(containerId, entries) {
    const container = document.getElementById(containerId);
    if (!container) {
        console.error(`‚õî Container with id '${containerId}' not found.`);
        return;
    }

    const table = document.createElement("table");
    table.className = "schedule-table";

    const thead = document.createElement("thead");
    const headerRow = document.createElement("tr");
    headerRow.innerHTML = "<th>‘∫’°’¥</th>" + ["‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"]
        .map(day => `<th>${day}</th>`).join("");
    thead.appendChild(headerRow);
    table.appendChild(thead);

    const tbody = document.createElement("tbody");

    ["09:30-10:50", "11:00-12:20", "12:50-14:10", "14:20-15:40"].forEach(slot => {
        const row = document.createElement("tr");
        row.innerHTML = `<td>${slot}</td>` + ["‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"]
            .map(day => {
                const lessons = entries.filter(entry => entry.day_name === day && entry.time_slot === slot);
                const cell = document.createElement("td");

                if (lessons.length > 0) {
                    lessons.forEach(lesson => {
                        const lessonDiv = document.createElement("div");
                        lessonDiv.textContent = `${lesson.subject_name} (${lesson.teacher_name})`;

                        // ‚úÖ ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’Ø’¨’´’Ø ’´÷Ä’°’§’°÷Ä’±’∏÷Ç’©’µ’∏÷Ç’∂ (Popup)
                        lessonDiv.addEventListener("click", () => openPopup(lessonDiv));

                        cell.appendChild(lessonDiv);
                    });
                } else {
                    cell.textContent = "-";
                }

                return cell.outerHTML;
            }).join("");

        tbody.appendChild(row);
    });

    table.appendChild(tbody);
    container.appendChild(table);
}


function filterScheduleByCourseCode(selectedCode) {
    console.log(`üîç filterScheduleByCourseCode ’Ø’°’∂’π’æ’•÷Å: ${selectedCode}`);

    const scheduleContainer = document.getElementById("scheduleContainer");
    if (!scheduleContainer) {
        console.error("‚õî scheduleContainer ’ø’°÷Ä÷Ä’® ’π’´ ’£’ø’∂’æ’•’¨!");
        return;
    }

    // ‚úÖ ’ä’°’∞’∫’°’∂’∏÷Ç’¥ ’•’∂÷Ñ ’æ’•÷Ä’∂’°’£’´÷Ä’®, ’•’©’• ’°’µ’∂ ’°÷Ä’§’•’∂ ’Ø’°
    let titleElement = document.querySelector(".schedule-title");
    if (!titleElement) {
        titleElement = document.createElement("h2");
        titleElement.classList.add("schedule-title");
        titleElement.textContent = "‘¥’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø";
        scheduleContainer.prepend(titleElement); // ‚úÖ ‘¥’∂’∏÷Ç’¥ ’•’∂÷Ñ ’æ’•÷Ä÷á’∏÷Ç’¥
    }

    // ‚úÖ ’Ñ’°÷Ñ÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’°’≤’µ’∏÷Ç’Ω’°’Ø’®’ù ’°’º’°’∂÷Å ’æ’•÷Ä’∂’°’£’´÷Ä’® ’ª’∂’ª’•’¨’∏÷Ç
    scheduleContainer.querySelectorAll("table").forEach(table => table.remove());

    if (!selectedCode || selectedCode === "") {
        console.log("üìå ’ë’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¢’∏’¨’∏÷Ä ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’∂’•÷Ä’®");
        filterByCourse(currentCourseYear, courseGroups);
        return;
    }

    // üîπ ’ñ’´’¨’ø÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’Ω’ø ’®’∂’ø÷Ä’æ’°’Æ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§’´
    const filteredEntries = scheduleData.filter(entry => entry.course_code === selectedCode);
    console.log(`‚úÖ ${selectedCode}-’´ ’∞’°’¥’°÷Ä ’£’ø’∂’æ’•÷Å ${filteredEntries.length} ’§’°’Ω`);

    if (filteredEntries.length === 0) {
        scheduleContainer.innerHTML += `<p style="color: red;">üì¢ No schedule available for ${selectedCode}!</p>`;
        return;
    }

    renderFilteredTables(filteredEntries);
}

function renderFilteredTables(scheduleData) {
    console.log("üìå Showing filtered schedule:", scheduleData);

    const container = document.getElementById("scheduleContainer");

    // ‚úÖ ’Ñ’°÷Ñ÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’∂’°’≠’∏÷Ä’§ ’°’≤’µ’∏÷Ç’Ω’°’Ø’∂’•÷Ä’®
    container.innerHTML = "";

    let uniqueCourseCodes = [...new Set(scheduleData.map(item => item.course_code))].sort();

    uniqueCourseCodes.forEach(courseCode => {
        ["’∞’°’¥’°÷Ä’´’π", "’∞’°’µ’ø’°÷Ä’°÷Ä"].forEach(weekType => {
            const filteredData = scheduleData.filter(
                item => item.course_code === courseCode && item.week_type === weekType
            );

            if (filteredData.length === 0) {
                return;
            }

            const courseTitle = document.createElement("h2");
            courseTitle.textContent = `${courseCode} - ${weekType}`;
            container.appendChild(courseTitle);

            const table = document.createElement("table");
            table.classList.add("schedule-table");

            const thead = document.createElement("thead");
            const headerRow = document.createElement("tr");

            ["‘∫’°’¥", "‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"].forEach(day => {
                const th = document.createElement("th");
                th.textContent = day;
                headerRow.appendChild(th);
            });

            thead.appendChild(headerRow);
            table.appendChild(thead);

            const tbody = document.createElement("tbody");

            ["09:30-10:50", "11:00-12:20", "12:50-14:10", "14:20-15:40"].forEach(slot => {
                const row = document.createElement("tr");

                const timeCell = document.createElement("td");
                timeCell.textContent = slot;
                row.appendChild(timeCell);

                ["‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"].forEach(day => {
                    const cell = document.createElement("td");
                    const lessons = filteredData.filter(
                        entry => entry.day_name === day && entry.time_slot === slot
                    );

                    if (lessons.length > 0) {
                        lessons.forEach(lesson => {
                            const lessonDiv = document.createElement("div");
                            const typeEmojiMap = {
                                "‘¥’°’Ω": "üìñ",
                                "‘º’°’¢": "üî¨",
                                "‘≥’∏÷Ä’Æ": "üõ†Ô∏è"
                            };

                            lessonDiv.textContent = `${typeEmojiMap[lesson.type_name] || "üìå"} ${lesson.subject_name}`;
                            lessonDiv.dataset.subject = lesson.subject_name;
                            lessonDiv.dataset.teacher = lesson.teacher_name;
                            lessonDiv.dataset.room = lesson.room_number;
                            lessonDiv.dataset.type = lesson.type_name;

                            // ‚úÖ ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ click ’´÷Ä’°’§’°÷Ä’±’∏÷Ç’©’µ’∏÷Ç’∂ (Popup)
                            lessonDiv.addEventListener("click", () => openPopup(lessonDiv));

                            cell.appendChild(lessonDiv);
                        });
                    } else {
                        cell.textContent = "-";
                    }

                    row.appendChild(cell);
                });

                tbody.appendChild(row);
            });

            table.appendChild(tbody);
            container.appendChild(table);
        });
    });
}

function renderTables(scheduleData) {
    console.log("üìå Rendering tables...");

    const scheduleContainer = document.getElementById("scheduleContainer");
    scheduleContainer.innerHTML = "";

    const uniqueCourseCodes = [...new Set(scheduleData.map(item => item.course_code))].sort();

    uniqueCourseCodes.forEach(courseCode => {
        ["’∞’°’¥’°÷Ä’´’π", "’∞’°’µ’ø’°÷Ä’°÷Ä"].forEach(weekType => {
            const filteredData = scheduleData.filter(item => item.course_code === courseCode && item.week_type === weekType);
            if (filteredData.length === 0) return;

            const courseTitle = document.createElement("h2");
            courseTitle.textContent = `${courseCode} - ${weekType}`;
            scheduleContainer.appendChild(courseTitle);

            const table = document.createElement("table");
            table.classList.add("schedule-table");

            const thead = document.createElement("thead");
            const headerRow = document.createElement("tr");
            ["‘∫’°’¥", "‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"].forEach(day => {
                const th = document.createElement("th");
                th.textContent = day;
                headerRow.appendChild(th);
            });

            thead.appendChild(headerRow);
            table.appendChild(thead);

            const tbody = document.createElement("tbody");

            ["09:30-10:50", "11:00-12:20", "12:50-14:10", "14:20-15:40"].forEach(slot => {
                const row = document.createElement("tr");

                const timeCell = document.createElement("td");
                timeCell.textContent = slot;
                row.appendChild(timeCell);

                ["‘µ÷Ä’Ø’∏÷Ç’∑’°’¢’©’´", "‘µ÷Ä’•÷Ñ’∑’°’¢’©’´", "’â’∏÷Ä’•÷Ñ’∑’°’¢’©’´", "’Ä’´’∂’£’∑’°’¢’©’´", "’à÷Ç÷Ä’¢’°’©"].forEach(day => {
                    const cell = document.createElement("td");
                    const lessons = filteredData.filter(entry => entry.day_name === day && entry.time_slot === slot);

                    if (lessons.length > 0) {
                        lessons.forEach(lesson => {
                            const lessonDiv = document.createElement("div");
                            lessonDiv.textContent = `${lesson.subject_name} (${lesson.teacher_name})`;

                            // ‚úÖ ’ä’°’∞’∫’°’∂’∏÷Ç’¥ ’•’∂÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’® dataset-’´ ’¥’•’ª popup-’´ ’∞’°’¥’°÷Ä
                            lessonDiv.dataset.subject = lesson.subject_name;
                            lessonDiv.dataset.teacher = lesson.teacher_name;
                            lessonDiv.dataset.room = lesson.room_number;
                            lessonDiv.dataset.type = lesson.type_name;

                            // ‚úÖ ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ click ’´÷Ä’°’§’°÷Ä’±’∏÷Ç’©’µ’∏÷Ç’∂’ù popup ’¢’°÷Å’•’¨’∏÷Ç ’∞’°’¥’°÷Ä
                            lessonDiv.addEventListener("click", function () {
                                console.log(`üìå ’ç’•’≤’¥’æ’•÷Å ${lesson.subject_name}, ’¢’°÷Å’∏÷Ç’¥ ’•’∂÷Ñ popup...`);
                                openPopup(this);
                            });

                            cell.appendChild(lessonDiv);
                        });
                    } else {
                        cell.textContent = "-";
                    }

                    row.appendChild(cell);
                });

                tbody.appendChild(row);
            });

            table.appendChild(tbody);
            scheduleContainer.appendChild(table);
        });
    });

    console.log("‚úÖ ‘±’≤’µ’∏÷Ç’Ω’°’Ø’® ’©’°÷Ä’¥’°÷Å’æ’•÷Å, popup-’´ event-’∂’•÷Ä’® ’°’æ’•’¨’°÷Å’æ’•÷Å’´’∂");
}


// ‚úÖ ’ì’∏÷É’°÷É ’¢’°÷Å’•’¨’∏÷Ç ÷Ü’∏÷Ç’∂’Ø÷Å’´’°
function openPopup(element) {
    console.log("üìå Popup ’¢’°÷Å’•’¨’∏÷Ç ÷É’∏÷Ä’±...");

    const popup = document.getElementById("classPopup");
    if (!popup) {
        console.error("‚õî Popup ’ø’°÷Ä÷Ä’® ’π’´ ’£’ø’∂’æ’•’¨!");
        return;
    }

    console.log("‚úÖ Popup-’® ’£’ø’∂’æ’•÷Å, ’¢’°÷Å’∏÷Ç’¥ ’•’∂÷Ñ...");

    document.getElementById("popupSubject").textContent = element.dataset.subject || "‘±’º’°÷Ä’Ø’° ’π’Ω’ø’°÷Å’æ’•÷Å";
    document.getElementById("popupTeacher").textContent = element.dataset.teacher || "‘¥’°’Ω’°’≠’∏’Ω ’π’Ω’ø’°÷Å’æ’•÷Å";
    document.getElementById("popupRoom").textContent = element.dataset.room || "‘º’Ω’°÷Ä’°’∂ ’π’Ω’ø’°÷Å’æ’•÷Å";
    document.getElementById("popupType").textContent = element.dataset.type || "’è’´’∫ ’π’Ω’ø’°÷Å’æ’•÷Å";

    popup.classList.remove("hidden");
    popup.style.display = "block";

    console.log("‚úÖ Popup ’¢’°÷Å’æ’°’Æ ’ß!");
}

// ‚úÖ ’ì’°’Ø’•’¨’∏÷Ç ÷Ü’∏÷Ç’∂’Ø÷Å’´’° (’°’∑’≠’°’ø’∏÷Ç’¥ ’ß ’¢’∏’¨’∏÷Ä ’§’•’∫÷Ñ’•÷Ä’∏÷Ç’¥)
function closePopup() {
    const popup = document.getElementById("classPopup");
    if (!popup) {
        console.error("‚õî Popup element not found!");
        return;
    }

    popup.classList.add("hidden"); // ‚úÖ ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ `hidden` ’§’°’Ω’®
    popup.style.display = "none"; // ‚úÖ ‘µ’©’• CSS-’∏÷Ç’¥ ’≠’∂’§’´÷Ä ’¨’´’∂’´, ’Ω’° ’ß’¨ ’Ø’°’∑’≠’°’ø’´

    console.log("‚úÖ Popup closed!");
}

document.addEventListener("DOMContentLoaded", function () {
    const closePopupButton = document.getElementById("closePopup");
    
    if (closePopupButton) {
        console.log("‚úÖ closePopup ’Ø’∏’≥’°’Ø’® ’£’ø’∂’æ’•÷Å, ’°’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ click ’´÷Ä’°’§’°÷Ä’±’∏÷Ç’©’µ’∏÷Ç’∂...");
        closePopupButton.addEventListener("click", closePopup);
    } else {
        console.warn("‚ö†Ô∏è closePopup ’Ø’∏’≥’°’Ø’® ’π’´ ’£’ø’∂’æ’•’¨, popup-’® ’Ø’°÷Ä’∏’≤ ’ß ’π’°’∑’≠’°’ø’•’¨");
    }
});


// ‚úÖ API-’´÷Å ’§’°’Ω’°÷Å’∏÷Ç÷Å’°’Ø’´ ’¢’•’º’∂’∏÷Ç’¥
async function loadSchedule() {
    try {
        console.log("üì° Fetching schedule from API...");
        const response = await fetch("/api/schedule");
        scheduleData = await response.json(); 

        console.log("‚úÖ Full Schedule Data:", scheduleData);

        if (!scheduleData || scheduleData.length === 0) {
            console.warn("‚ö†Ô∏è No schedule data received from API!");
            return;
        }

        // ‚úÖ ‘ø’°’¶’¥’∏÷Ç’¥ ’•’∂÷Ñ levelGroups ’®’Ω’ø level_name-’´
        levelGroups = {};
        scheduleData.forEach(entry => {
            let level = entry.level_name;
            if (!level) {
                console.warn("‚ö†Ô∏è Missing level_name in entry:", entry);
                return;
            }
            if (!levelGroups[level]) {
                levelGroups[level] = [];
            }
            levelGroups[level].push(entry);
        });

        console.log("üîç Level Groups Created:", levelGroups);
    } catch (error) {
        console.error("‚ùå Error loading schedule:", error);
    }
}


async function loadCourses(selectedLevel) {
    try {
        console.log(`üì° Fetching course codes for level: ${selectedLevel}`);
        const response = await fetch(`/api/courses`);
        if (!response.ok) throw new Error(`Server error: ${response.status}`);

        const courses = await response.json();
        console.log("‚úÖ All courses:", courses);

        // ‚úÖ ’ñ’´’¨’ø÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’Ω’ø level-’´
        const filteredCourses = courses.filter(course => isCourseMatchingLevel(course));

        console.log(`‚úÖ Filtered courses for '${selectedLevel}':`, filteredCourses);

        const courseCodeSelect = document.getElementById("courseCodeFilter");
        if (!courseCodeSelect) {
            console.error("‚õî Course code dropdown not found!");
            return;
        }

        courseCodeSelect.innerHTML = `<option value="">‘∏’∂’ø÷Ä’•’¨ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§...</option>`;
        filteredCourses.forEach(course => {
            const option = document.createElement("option");
            option.value = course.code;
            option.textContent = course.code;
            courseCodeSelect.appendChild(option);
        });

        courseCodeSelect.disabled = false;
        console.log(`‚úÖ Course codes for '${selectedLevel}' successfully added.`);

    } catch (error) {
        console.error("‚õî Error loading course codes:", error);
    }
}

document.getElementById("courseCodeFilter").addEventListener("change", function () {
    localStorage.setItem("selectedCourseCode", this.value);
    console.log(`üìå ’ä’°’∞’∫’°’∂’æ’•’¨ ’ß ÷Ü’´’¨’ø÷Ä’®: ${this.value}`);
});

function updateCourseFilter() {
    const courseCodeFilter = document.getElementById("courseCodeFilter");
    courseCodeFilter.innerHTML = `<option value="">‘≤’∏’¨’∏÷Ä’®</option>`; // ’ç’Ø’¶’¢’∂’°’Ø’°’∂ ’°÷Ä’™’•÷Ñ

    if (!scheduleData || scheduleData.length === 0) {
        console.warn("‚ö†Ô∏è No schedule data available!");
        return;
    }

    if (!levelGroups[currentLevel]) {
        console.warn(`‚ö†Ô∏è No data for current level: ${currentLevel}`);
        return;
    }

    // üîπ ’é’•÷Ä÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’¥’´’°’µ’∂ ’®’∂’ø÷Ä’æ’°’Æ ’Ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’§’•÷Ä’®
    const filteredCourses = levelGroups[currentLevel].map(entry => entry.course_code);
    const uniqueCourseCodes = [...new Set(filteredCourses)].sort();

    uniqueCourseCodes.forEach(code => {
        const option = document.createElement("option");
        option.value = code;
        option.textContent = code;
        courseCodeFilter.appendChild(option);
    });

    console.log(`‚úÖ Course codes updated for level "${currentLevel}"`);
}


function activateCourseButtons() {
    console.log("üìå ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’® ’°’Ø’ø’´’æ’°÷Å’æ’∏÷Ç’¥ ’•’∂");

    const courseButtons = document.querySelectorAll(".course-btn");
    if (!courseButtons || courseButtons.length === 0) {
        console.error("‚õî ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä’® ’π’•’∂ ’£’ø’∂’æ’•’¨!");
        return;
    }

    const levelMap = {
        "1": "‘±’º’°’ª’´’∂",
        "2": "‘µ÷Ä’Ø÷Ä’∏÷Ä’§",
        "3": "‘µ÷Ä÷Ä’∏÷Ä’§",
        "4": "’â’∏÷Ä÷Ä’∏÷Ä’§"
    };

    courseButtons.forEach(button => {
        console.log(`‚úÖ ‘ø’∏÷Ç÷Ä’Ω’´ ’Ø’∏’≥’°’Ø ’£’ø’∂’æ’•÷Å: ${button.textContent}`);

        button.addEventListener("click", function () {
            const selectedLevelNumber = this.dataset.course;

            if (!selectedLevelNumber || !levelMap[selectedLevelNumber]) {
                console.error("‚õî ‘±’∂’æ’°’æ’•÷Ä ’Ø’∏÷Ç÷Ä’Ω’´ ’®’∂’ø÷Ä’∏÷Ç’©’µ’∏÷Ç’∂:", selectedLevelNumber);
                return;
            }

            const selectedLevel = levelMap[selectedLevelNumber];
            console.log(`üìå ‘∏’∂’ø÷Ä’æ’•÷Å "${selectedLevel}" ’Ø’∏÷Ç÷Ä’Ω`);

            currentLevel = selectedLevel;
            updateCourseFilter(); // ‚úÖ ‘π’°÷Ä’¥’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’´ dropdown-’®
            filterByCourse(selectedLevel);
        });
    });
}

document.addEventListener("DOMContentLoaded", function () {
    const filterButton = document.getElementById("applyFilter");

    if (filterButton) {
        console.log("‚úÖ applyFilter ’Ø’∏’≥’°’Ø’® ’£’ø’∂’æ’•÷Å, ’°’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’Ø’¨’´’Ø ’´÷Ä’°’§’°÷Ä’±’∏÷Ç’©’µ’∏÷Ç’∂...");
        filterButton.addEventListener("click", function () {
            console.log("üìå applyFilter ’Ø’∏’≥’°’Ø’® ’Ω’•’≤’¥’æ’•÷Å!"); // ‚úÖ ’ç’•’≤’¥’•’¨’∏÷Ç÷Å ’∫’•’ø÷Ñ ’ß ’ø’∫’æ’´
            applyFilter(); // ‚úÖ ‘ø’°’∂’π’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂
        });
    } else {
        console.error("‚õî applyFilter ’Ø’∏’≥’°’Ø’® ’π’´ ’£’ø’∂’æ’•’¨!");
    }
});


function restoreFilterSelection() {
    console.log("üìå ’é’•÷Ä’°’Ø’°’∂’£’∂’∏÷Ç’¥ ’•’∂÷Ñ ÷Ü’´’¨’ø÷Ä’´ ’æ’•÷Ä’ª’´’∂ ’®’∂’ø÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®...");

    const courseCodeFilter = document.getElementById("courseCodeFilter");
    if (!courseCodeFilter) {
        console.error("‚õî courseCodeFilter ’ø’°÷Ä÷Ä’® ’π’´ ’£’ø’∂’æ’•’¨!");
        return;
    }

    const savedFilter = localStorage.getItem("selectedCourseCode");
    if (savedFilter) {
        courseCodeFilter.value = savedFilter;
        console.log(`‚úÖ ’é’•÷Ä’°’Ø’°’∂’£’∂’æ’°’Æ ÷Ü’´’¨’ø÷Ä’®: ${savedFilter}`);
    } else {
        console.log("üìå ’à’π ’¥’´ ÷Ü’´’¨’ø÷Ä ’π’´ ’∫’°’∞’∫’°’∂’æ’•’¨");
    }
}
